<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>菜鸟逆袭</title>
  
  <subtitle>成长笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-08T02:30:40.645Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>武尊</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CentOS6.9安装Docker</title>
    <link href="http://yoursite.com/2018/11/08/CentOS6-9%E5%AE%89%E8%A3%85Docker/"/>
    <id>http://yoursite.com/2018/11/08/CentOS6-9安装Docker/</id>
    <published>2018-11-08T02:25:26.000Z</published>
    <updated>2018-11-08T02:30:40.645Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装yum源"><a href="#安装yum源" class="headerlink" title="安装yum源"></a>安装yum源</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</span><br></pre></td></tr></table></figure><h1 id="更新yum"><a href="#更新yum" class="headerlink" title="更新yum"></a>更新yum</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y</span><br></pre></td></tr></table></figure><h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-io -y</span><br></pre></td></tr></table></figure><h1 id="查看docker版本"><a href="#查看docker版本" class="headerlink" title="查看docker版本"></a>查看docker版本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker  version</span><br></pre></td></tr></table></figure><h1 id="启动docker服务"><a href="#启动docker服务" class="headerlink" title="启动docker服务"></a>启动docker服务</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service docker  start</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装yum源&quot;&gt;&lt;a href=&quot;#安装yum源&quot; class=&quot;headerlink&quot; title=&quot;安装yum源&quot;&gt;&lt;/a&gt;安装yum源&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt
      
    
    </summary>
    
      <category term="Docker" scheme="http://yoursite.com/categories/Docker/"/>
    
      <category term="CentOS" scheme="http://yoursite.com/categories/Docker/CentOS/"/>
    
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
      <category term="CentOS" scheme="http://yoursite.com/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令(持续更新)</title>
    <link href="http://yoursite.com/2018/10/26/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/10/26/Git常用命令/</id>
    <published>2018-10-26T02:25:05.000Z</published>
    <updated>2018-10-26T04:58:38.393Z</updated>
    
    <content type="html"><![CDATA[<h2 id="初始化命令"><a href="#初始化命令" class="headerlink" title="初始化命令"></a>初始化命令</h2><h3 id="初始化本地仓库"><a href="#初始化本地仓库" class="headerlink" title="初始化本地仓库"></a>初始化本地仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h3 id="config配置"><a href="#config配置" class="headerlink" title="config配置"></a>config配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --list                <span class="comment">#查看配置</span></span><br><span class="line">git config --system user.name    <span class="comment">#系统级配置</span></span><br><span class="line">git config --global user.name    <span class="comment">#全局配置，系统用户级</span></span><br><span class="line">git config user.name             <span class="comment">#仓库级配置</span></span><br></pre></td></tr></table></figure><h3 id="克隆远程仓库到本地"><a href="#克隆远程仓库到本地" class="headerlink" title="克隆远程仓库到本地"></a>克隆远程仓库到本地</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> &lt;remote-url&gt;</span><br><span class="line">git <span class="built_in">clone</span> &lt;remote-url&gt; myrep <span class="comment">#myrep作为本地仓库名</span></span><br></pre></td></tr></table></figure><h3 id="remot-远程仓库"><a href="#remot-远程仓库" class="headerlink" title="remot 远程仓库"></a>remot 远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git remote -v                               <span class="comment">#查看远程仓库</span></span><br><span class="line">git remote show origin                      <span class="comment">#查看远程仓库</span></span><br><span class="line">git remote add origin &lt;remote-url&gt;          <span class="comment">#添加远程仓库</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin &lt;URL&gt;             <span class="comment">#修改远程仓库地址</span></span><br><span class="line">git remote rename &lt;remote-name&gt; paul        <span class="comment">#重命名远程仓库</span></span><br><span class="line">git remote rm paul                          <span class="comment">#移除远程仓库</span></span><br></pre></td></tr></table></figure><h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><h3 id="查看文件状态"><a href="#查看文件状态" class="headerlink" title="查看文件状态"></a>查看文件状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">git status -s 　　　　<span class="comment">#状态简览</span></span><br></pre></td></tr></table></figure><h3 id="暂存已修改文件"><a href="#暂存已修改文件" class="headerlink" title="暂存已修改文件"></a>暂存已修改文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add fileName</span><br><span class="line">git add . 　　　　　  <span class="comment">#暂存所有已修改文件</span></span><br></pre></td></tr></table></figure><h3 id="提交更新"><a href="#提交更新" class="headerlink" title="提交更新"></a>提交更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"commit message"</span></span><br><span class="line">git commit -a -m <span class="string">"commit message"</span>    <span class="comment">#跳过暂存区，直接提交</span></span><br></pre></td></tr></table></figure><h3 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h3 id="从远程仓库拉取数据"><a href="#从远程仓库拉取数据" class="headerlink" title="从远程仓库拉取数据"></a>从远程仓库拉取数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch [remote-name]</span><br></pre></td></tr></table></figure><h3 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge</span><br></pre></td></tr></table></figure><h3 id="与远程仓库同步-fetch-merge"><a href="#与远程仓库同步-fetch-merge" class="headerlink" title="与远程仓库同步(fetch+merge)"></a>与远程仓库同步(fetch+merge)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><h2 id="分支命令"><a href="#分支命令" class="headerlink" title="分支命令"></a>分支命令</h2><h3 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git branch                  <span class="comment">#查看分支，前面带星号*的，是当前分支</span></span><br><span class="line">git branch -r               <span class="comment">#查看所有远程分支</span></span><br><span class="line">git branch -a               <span class="comment">#查看所有分支(本地跟远程)</span></span><br><span class="line">git branch -v               <span class="comment">#查看每个分支最后一次提交</span></span><br><span class="line">git branch --merged         <span class="comment">#查看已合并到当前分支的分支</span></span><br><span class="line">git branch --no-merged      <span class="comment">#查看未合并到当前分支的分支</span></span><br></pre></td></tr></table></figure><h3 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git branch &lt;branch-name&gt;                            <span class="comment">#创建分支</span></span><br><span class="line">git checkout -b &lt;branch-name&gt;                       <span class="comment">#创建并切换到本地分支</span></span><br><span class="line">git checkout -b &lt;branch-name&gt; origin/&lt;branch-name&gt;  <span class="comment">#创建并切换到远程分支</span></span><br></pre></td></tr></table></figure><h3 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -d &lt;remote-branchname&gt;               <span class="comment">#删除本地分支，&lt;remote-branchname&gt;：分支名称</span></span><br><span class="line">git push origin --delete &lt;remote-branchname&gt;    <span class="comment">#删除远程分支</span></span><br></pre></td></tr></table></figure><h3 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m &lt;new-branch-name&gt;</span><br></pre></td></tr></table></figure><h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;branch-name&gt;        <span class="comment">#切换分支</span></span><br></pre></td></tr></table></figure><h3 id="合并分支-1"><a href="#合并分支-1" class="headerlink" title="合并分支"></a>合并分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git merge hotfix            <span class="comment">#把 hotfix 分支，合并到当前分支</span></span><br><span class="line">git mergetool               <span class="comment">#图形化解决冲突的工具</span></span><br></pre></td></tr></table></figure><h2 id="标签命令"><a href="#标签命令" class="headerlink" title="标签命令"></a>标签命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git tag                                             <span class="comment">#查看标签</span></span><br><span class="line">git tag -a &lt;version-number&gt; -m <span class="string">"my version 1.4"</span>     <span class="comment">#创建附注标签，默认tag是打在最近的一次commit上</span></span><br><span class="line">git tag &lt;version-number&gt;                            <span class="comment">#创建轻量标签&lt;version-number&gt;:v1.0.0</span></span><br><span class="line">git tag -a &lt;version-number&gt; &lt;commit-id&gt;             <span class="comment">#对某次提交后打标签</span></span><br><span class="line">git push origin &lt;version-number&gt;                    <span class="comment">#上传某个标签，GIT 默认不会 push 标签到远程仓库</span></span><br><span class="line">git push origin --tags                              <span class="comment">#上传所有不在远程仓库的标签</span></span><br><span class="line">git checkout -b version2 v2.0.0                     <span class="comment">#检出标签</span></span><br><span class="line">git tag -d &lt;tag-name&gt;                               <span class="comment">#删除本地标签</span></span><br><span class="line">git push origin :refs/tags/&lt;tag-name&gt;               <span class="comment">#删除远程标签</span></span><br></pre></td></tr></table></figure><h2 id="回退还原"><a href="#回退还原" class="headerlink" title="回退还原"></a>回退还原</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git fetch --all &amp;&amp; git reset --hard origin/master   <span class="comment">#抛弃本地所有的修改，回到远程仓库的状态</span></span><br><span class="line">git checkout -b branch_name tag_name                <span class="comment">#回退到指定标签版本</span></span><br><span class="line">git checkout &lt;file-name&gt;                            <span class="comment">#放弃工作区的修改</span></span><br><span class="line">git checkout .                                      <span class="comment">#放弃所有修改</span></span><br><span class="line">git reset &lt;commit-id&gt;                               <span class="comment">#默认就是-mixed参数。</span></span><br><span class="line">git reset –mixed HEAD^                              <span class="comment">#回退至上个版本，它将重置HEAD到另外一个commit,并且重置暂存区以便和HEAD相匹配，但是也到此为止。工作区不会被更改。</span></span><br><span class="line">git reset –soft HEAD~3                              <span class="comment">#回退至三个版本之前，只回退了commit的信息，暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可  </span></span><br><span class="line">git reset –hard &lt;commit-id&gt;                         <span class="comment">#彻底回退到指定commit-id的状态，暂存区和工作区也会变为指定commit-id版本的内容</span></span><br></pre></td></tr></table></figure><h2 id="其它命令"><a href="#其它命令" class="headerlink" title="其它命令"></a>其它命令</h2><h3 id="diff比较"><a href="#diff比较" class="headerlink" title="diff比较"></a>diff比较</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git diff                <span class="comment">#比较 暂存区－工作区</span></span><br><span class="line">git diff --staged       <span class="comment">#比较 仓库－暂存区</span></span><br></pre></td></tr></table></figure><h3 id="提交历史"><a href="#提交历史" class="headerlink" title="提交历史"></a>提交历史</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">$ git <span class="built_in">log</span> --<span class="built_in">stat</span>    　　 <span class="comment">#展示提交的简略统计信息</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;初始化命令&quot;&gt;&lt;a href=&quot;#初始化命令&quot; class=&quot;headerlink&quot; title=&quot;初始化命令&quot;&gt;&lt;/a&gt;初始化命令&lt;/h2&gt;&lt;h3 id=&quot;初始化本地仓库&quot;&gt;&lt;a href=&quot;#初始化本地仓库&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>更换Hexo博客主题</title>
    <link href="http://yoursite.com/2018/10/01/%E6%9B%B4%E6%8D%A2Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98/"/>
    <id>http://yoursite.com/2018/10/01/更换Hexo博客主题/</id>
    <published>2018-10-01T14:57:21.000Z</published>
    <updated>2018-10-26T01:59:26.898Z</updated>
    
    <content type="html"><![CDATA[<p>根据上一篇博客 <a href="/2018/09/24/使用Hexo搭建个人博客/">使用Hexo搭建个人博客</a>我们已经看见个人博客的雏形了，但是博客网页一点也不高大上，为了让它看起来更美观一些，现在我们来为其更换主题，这里以使用github上的next主题为例(本博客站亦是用的next主题)。<br><strong>注意：如未特别声明，本文所有命令均默认在Git Bash命令窗口中执行</strong></p><h1 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h1><h2 id="创建next文件夹"><a href="#创建next文件夹" class="headerlink" title="创建next文件夹"></a>创建next文件夹</h2><p>在本地博客根目录下，鼠标右键打开Git Bash命令窗口，执行以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir themes/next</span><br></pre></td></tr></table></figure></p><h2 id="下载Next主题"><a href="#下载Next主题" class="headerlink" title="下载Next主题"></a>下载Next主题</h2><p>此步骤可参考<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">Next官方文档</a>亦可直接执行以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><p>下载成功后我们会看到Next的主题已经存在themes目录下的next文件夹中<br><img src="主题目录示例.png" alt="图片加载失败"></p><h2 id="更换主题配置"><a href="#更换主题配置" class="headerlink" title="更换主题配置"></a>更换主题配置</h2><p>修改博客根目录下的_config.yml文件(<strong>注意:这里是博客配置文件，不是next下的主题配置文件</strong>)，搜索<code>theme</code>字段，并将其值修改为next<br><img src="修改博客配置文件切换主题示例.png" alt="图片加载失败"></p><h1 id="优化主题"><a href="#优化主题" class="headerlink" title="优化主题"></a>优化主题</h1><h2 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h2><p>编辑博客配置文件(根目录下的_config.yml文件)<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主标题</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">菜鸟逆袭</span></span><br><span class="line"><span class="comment"># 副标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">成长笔记</span></span><br><span class="line"><span class="comment"># 个人签名</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">没有天生的信心，只有不断培养的信心，坚强的毅力可以征服世界上任何一座高峰。</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="comment"># 作者</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">武尊</span></span><br><span class="line"><span class="comment"># 博客使用语言(zh-Hans表示使用中文)</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span></span><br><span class="line"><span class="attr">timezone:</span></span><br></pre></td></tr></table></figure></p><h2 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h2><p>编辑主题配置文件(themes/next/_config.yml)，查找<code>scheme</code><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure></p><p>选择你喜欢的，去掉前面的#号，其他加上#号(即注释掉的意思)。本博客站使用的是Pisces主题</p><h2 id="设置目录"><a href="#设置目录" class="headerlink" title="设置目录"></a>设置目录</h2><p>默认只有两个目录(首页和归档),如果还需添加，编辑主题配置文件(themes/next/_config.yml)，查询<code>menu</code><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="comment"># 首页</span></span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="comment"># 关于</span></span><br><span class="line">  <span class="comment">#about: /about/ || user</span></span><br><span class="line">  <span class="comment"># 标签</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line">  <span class="comment"># 分类</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line">  <span class="comment"># 归档</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line">  <span class="comment"># 搜索</span></span><br><span class="line">  <span class="comment">#search: /search/ || search</span></span><br><span class="line">  <span class="comment"># 日程表</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment"># 站点地图</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment"># 404页面</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure></p><p>将需要的Menu前面#号去掉即可</p><h2 id="初始化对应的Menu"><a href="#初始化对应的Menu" class="headerlink" title="初始化对应的Menu"></a>初始化对应的Menu</h2><p>如果我们上一步添加了标签页，此时点击标签菜单会出现Cannot GET /tags/错误，我们需要创建一个标签页面，执行以下命令：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">new</span> <span class="string">page</span> <span class="string">"tags"</span></span><br></pre></td></tr></table></figure></p><p>成功后在博客的根目录下的<code>/source</code>目录中会创建一个tags文件夹，我们进入该文件夹(/source/tags)编辑index.md文件,添加<code>type: &quot;tags&quot;</code><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-09</span><span class="bullet">-23</span> <span class="number">18</span><span class="string">:41:09</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></p><p><strong>其它目录也同理创建</strong></p><h2 id="设置动态背景"><a href="#设置动态背景" class="headerlink" title="设置动态背景"></a>设置动态背景</h2><p>编辑主题配置文件(themes/next/_config.yml)，查找<code>canvas_nest</code>修改为true即可<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Canvas-nest</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h2 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h2><p>编辑主题配置文件(themes/next/_config.yml)，查询<code>avatar</code>添加头像链接地址<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="comment"># in theme directory(source/images): /images/avatar.gif</span></span><br><span class="line"><span class="comment"># in site  directory(source/uploads): /uploads/avatar.gif</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="attr">http://pfgzzdcxg.bkt.clouddn.com/avatar.png</span></span><br></pre></td></tr></table></figure></p><h2 id="文章添加结束语"><a href="#文章添加结束语" class="headerlink" title="文章添加结束语"></a>文章添加结束语</h2><ul><li><p>添加模板文件<br>在主题目录\themes\next\layout_macro中新建 passage-end-tag.swig文件,并添加以下内容：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line">    <span class="string">&#123;%</span> <span class="string">if</span> <span class="string">not</span> <span class="string">is_index</span> <span class="string">%&#125;</span></span><br><span class="line">        <span class="string">&lt;div</span> <span class="string">style="text-align:center;color:</span> <span class="comment">#ccc;font-size:14px;"&gt;</span></span><br><span class="line"><span class="bullet">              -</span><span class="bullet">------------本文结束&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-paw"&gt;&lt;/i&gt;感谢您的阅读-------------</span></span><br><span class="line">        <span class="string">&lt;/div&gt;</span></span><br><span class="line">    <span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>导入模板文件<br>在\themes\next\layout_macro\post.swig文件中，找到<code>END POST BODY</code>在之前添加：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line">      <span class="string">&#123;%</span> <span class="string">if</span> <span class="string">not</span> <span class="string">is_index</span> <span class="string">%&#125;</span></span><br><span class="line">          <span class="string">&#123;%</span> <span class="string">include</span> <span class="string">'passage-end-tag.swig'</span> <span class="string">%&#125;</span></span><br><span class="line">      <span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>  如图:<br>  <img src="文章添加结束语示例.png" alt="图片加载失败"></p></li><li>配置<br>编辑主题配置文件(themes/next/_config.yml)，查找<code>passage_end_tag</code>修改为true<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line"><span class="attr">passage_end_tag:</span></span><br><span class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>本文参考<a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">Hexo-NexT配置超炫网页效果</a>。</strong><br><strong>其它更酷炫的效果也请参考<a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">Hexo-NexT配置超炫网页效果</a>进行配置。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;根据上一篇博客 &lt;a href=&quot;/2018/09/24/使用Hexo搭建个人博客/&quot;&gt;使用Hexo搭建个人博客&lt;/a&gt;我们已经看见个人博客的雏形了，但是博客网页一点也不高大上，为了让它看起来更美观一些，现在我们来为其更换主题，这里以使用github上的next主题为例(本
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
      <category term="Next" scheme="http://yoursite.com/categories/Hexo/Next/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Next" scheme="http://yoursite.com/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>git配置ssh key</title>
    <link href="http://yoursite.com/2018/09/24/git%E9%85%8D%E7%BD%AEssh-key/"/>
    <id>http://yoursite.com/2018/09/24/git配置ssh-key/</id>
    <published>2018-09-24T13:31:18.000Z</published>
    <updated>2018-10-26T01:59:26.855Z</updated>
    
    <content type="html"><![CDATA[<p><strong>注意：如未特别声明，本文所有命令均默认在Git Bash命令窗口中执行</strong></p><h2 id="检查一下用户名和邮箱是否配置"><a href="#检查一下用户名和邮箱是否配置" class="headerlink" title="检查一下用户名和邮箱是否配置"></a>检查一下用户名和邮箱是否配置</h2><p>执行一下命令检查用户名和邮箱配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global  --list</span><br></pre></td></tr></table></figure></p><p>我的机器显示信息如下（已配置）：<br><img src="检查git配置信息.png" alt="加载图片失败"></p><h2 id="配置用户名跟邮箱"><a href="#配置用户名跟邮箱" class="headerlink" title="配置用户名跟邮箱"></a>配置用户名跟邮箱</h2><p>如未配置，则执行以下命令进行配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global  user.name <span class="string">"这里换上你的用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"这里换上你的邮箱"</span></span><br></pre></td></tr></table></figure></p><h2 id="检查是否已有ssh"><a href="#检查是否已有ssh" class="headerlink" title="检查是否已有ssh"></a>检查是否已有ssh</h2><p>执行一下命令检查是否已有ssh<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br></pre></td></tr></table></figure></p><p>切换成功则表示已有ssh(路径默认为<strong>C盘&gt;用户&gt;用户名&gt;.ssh</strong>下)，可直接跳过以下生成ssh步骤，反之表示没有。</p><h2 id="生成ssh"><a href="#生成ssh" class="headerlink" title="生成ssh"></a>生成ssh</h2><p>执行以下命令生成ssh：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"这里换上你的邮箱"</span></span><br></pre></td></tr></table></figure></p><p>执行命令后需要进行3次或4次确认：</p><ol><li>确认秘钥的保存路径（如果不需要改路径则直接回车,<strong>建议直接回车</strong>）;</li><li>如果上一步置顶的保存路径下已经有秘钥文件，则需要确认是否覆盖（如果之前的秘钥不再需要则直接回车覆盖，如需要则手动拷贝到其他目录后再覆盖）;</li><li>创建密码（如果不需要密码则直接回车<strong>建议直接回车</strong>）;</li><li>确认密码（<strong>创建密码是直接回车，这里同样直接回车，否则输入创建密码</strong>）；</li></ol><p>在指定的保存路径下会生成2个名为id_rsa和id_rsa.pub的文件:<br><img src="ssh所在目录.png" alt="加载图片失败"></p><h2 id="配置gitHub"><a href="#配置gitHub" class="headerlink" title="配置gitHub"></a>配置gitHub</h2><h3 id="进入gitHub设置页面："><a href="#进入gitHub设置页面：" class="headerlink" title="进入gitHub设置页面："></a>进入gitHub设置页面：</h3><p><img src="进入gitHub设置页面.png" alt="加载图片失败"></p><h3 id="选择SSH-and-GPG-keys"><a href="#选择SSH-and-GPG-keys" class="headerlink" title="选择SSH and GPG keys"></a>选择SSH and GPG keys</h3><p><img src="选择SSH and GPG keys.png" alt="加载图片失败"></p><h3 id="添加ssh-key"><a href="#添加ssh-key" class="headerlink" title="添加ssh key"></a>添加ssh key</h3><p><img src="添加ssh key.png" alt="加载图片失败"><br>使用文本工具打开之前生成的id_rsa.pub文件，把内容复制到下面的输入框(Key)<br><img src="输入key.png" alt="加载图片失败"></p><h3 id="测试配置是否成功"><a href="#测试配置是否成功" class="headerlink" title="测试配置是否成功"></a>测试配置是否成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现如下图所示内容表示成功<br><img src="测试配置.png" alt="加载图片失败"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;注意：如未特别声明，本文所有命令均默认在Git Bash命令窗口中执行&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;检查一下用户名和邮箱是否配置&quot;&gt;&lt;a href=&quot;#检查一下用户名和邮箱是否配置&quot; class=&quot;headerlink&quot; title=&quot;检查一下
      
    
    </summary>
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo搭建个人博客</title>
    <link href="http://yoursite.com/2018/09/24/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/09/24/使用Hexo搭建个人博客/</id>
    <published>2018-09-24T07:46:05.000Z</published>
    <updated>2018-10-26T01:59:26.876Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h1><h2 id="Hexo介绍"><a href="#Hexo介绍" class="headerlink" title="Hexo介绍"></a>Hexo介绍</h2><blockquote><p>Hexo是一个快速、简洁且高效的博客框架，它基于 Node.js。 通过 Hexo 你可以轻松地使用 Markdown编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 标签插件 来快速的插入特定形式的内容。</p></blockquote><h2 id="安装Node-js环境"><a href="#安装Node-js环境" class="headerlink" title="安装Node.js环境"></a>安装Node.js环境</h2><blockquote><p>Hexo是基于Node.js的，因此在安装Hexo之前，我们需要先安装Node.js环境。Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境，可以在非浏览器环境下，解释运行 JS 代码。</p><ul><li>下载地址：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></li><li>测试安装：执行<code>node -v</code>命令，显示版本号即安装成功</li></ul></blockquote><h2 id="安装Git工具"><a href="#安装Git工具" class="headerlink" title="安装Git工具"></a>安装Git工具</h2><blockquote><p>Git是目前世界上最流行的分布式版本控制系统。使用Git可以帮助我们把本地的网页和文章等内容提交到Github上，实现同步。</p><ul><li>下载地址：<a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></li><li>测试安装：执行<code>git --version</code>命令，显示版本号即安装成功</li></ul></blockquote><h2 id="安装Hexo工具"><a href="#安装Hexo工具" class="headerlink" title="安装Hexo工具"></a>安装Hexo工具</h2><blockquote><p>Hexo是一个快速、简洁且高效的博客框架。</p><ul><li>安装：执行<code>npm install -g hexo-cli</code>命令即可安装成功</li><li>测试：执行<code>hexo -v</code>命令,显示版本号即安装成功</li></ul></blockquote><h2 id="注册gitHub账号"><a href="#注册gitHub账号" class="headerlink" title="注册gitHub账号"></a>注册gitHub账号</h2><blockquote><p>gitHub是一个面向开源及私有软件项目的托管平台，因为只支持git作为唯一的版本库格式进行托管，故名gitHub。</p><ul><li>注册地址: <a href="https://github.com/join?source=header-home" target="_blank" rel="noopener">https://github.com</a></li><li>注册流程：如果gitHub都不会注册，你可以放弃观看本文或自行<a href="https://www.baidu.com" target="_blank" rel="noopener">百度一下</a></li></ul></blockquote><p><strong>注意：注册gitHub时，一定要选择一个合适的用户名，因为后期博客的访问域名将会使用该用户名。</strong></p><h2 id="配置git-ssh-key"><a href="#配置git-ssh-key" class="headerlink" title="配置git ssh key"></a>配置git ssh key</h2><blockquote><p>请参考 <a href="/2018/09/24/git配置ssh-key/">git配置 ssh key</a></p></blockquote><h1 id="二、开始搭建博客"><a href="#二、开始搭建博客" class="headerlink" title="二、开始搭建博客"></a>二、开始搭建博客</h1><h2 id="创建本地博客"><a href="#创建本地博客" class="headerlink" title="创建本地博客"></a>创建本地博客</h2><blockquote><p>在本地合适的目录点击鼠标右键打开命令窗口，如图:<br><img src="打开命令窗口.jpg" alt="加载图片失败" title="打开命令窗口示例"><br>执行命令：<code>hexo init my-blog</code>my-blog为项目名，自定义即可,如图：<br><img src="创建博客命令示例.png" alt="加载图片失败" title="创建博客命令示例"></p></blockquote><h2 id="测试博客"><a href="#测试博客" class="headerlink" title="测试博客"></a>测试博客</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入项目根目录</span></span><br><span class="line"><span class="built_in">cd</span> my-blog</span><br><span class="line"><span class="comment"># 安装项目依赖</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 生成博客</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>如图表示项目启动成功，在浏览器中访问<a href="localhost:4000" target="_blank" rel="noopener">localhost:4000</a>即可访问：<br><img src="项目启动成功示例.png" alt="加载图片失败" title="项目启动成功示例"></p><h2 id="发布项目到gitHub"><a href="#发布项目到gitHub" class="headerlink" title="发布项目到gitHub"></a>发布项目到gitHub</h2><blockquote><p>经过以上步骤，我们的博客已经搭建成功，但是只能自己本地访问，显然不是我们最终希望的结果，若要别人也能看到，那就需要我们将其同步部署到GitHub上了。</p><ol><li><a href="https://github.com/login" target="_blank" rel="noopener">登录gitHub</a></li><li>创建仓库<br>这个过程和建立普通的仓库没什么区别，关键在于新仓库的名字，一定要是<code>UserName + .github.io</code>的形式。例如你的用户名为<strong>blog</strong>,则仓库名称为<code>blog.github.io</code>,如图:<br><img src="创建仓库1.png" alt="加载图片失败" title="创建仓库图1"><br><img src="创建仓库2.png" alt="加载图片失败" title="创建仓库图2"></li><li>发布项目<br>进入本地项目的根目录打开<code>_config.yml</code>站点配置文件，找到<code>deploy</code>参数做如下修改:<br><img src="站点目录修改git地址.png" alt="加载图片失败" title="配置git上传示例"><br><strong>repository</strong>参数值为gitHub仓库的SSH连接，在刚才新建的仓库中复制即可，如图：<br><img src="复制SSH链接.png" alt="加载图片失败" title="复制SSH链接示例"><br>最后在根目录中执行bash命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git —save   <span class="comment"># 安装部署插件</span></span><br><span class="line">hexo d   <span class="comment">#部署到gitHub</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><p>等待1~3分钟后，浏览器中输入<a href="https://my-blogs.github.io/" title="仓库名称" target="_blank" rel="noopener">https://userName.github.io</a>即可访问到我们的博客了，至此我们的个人博客搭建完成。<a href="http://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官方文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、准备工作&quot;&gt;&lt;a href=&quot;#一、准备工作&quot; class=&quot;headerlink&quot; title=&quot;一、准备工作&quot;&gt;&lt;/a&gt;一、准备工作&lt;/h1&gt;&lt;h2 id=&quot;Hexo介绍&quot;&gt;&lt;a href=&quot;#Hexo介绍&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
